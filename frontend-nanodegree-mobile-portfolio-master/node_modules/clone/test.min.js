var clone=require("./");function inspect(a){seen=[];return JSON.stringify(a,function(a,c){if(null!=c&&"object"==typeof c){if(0<=seen.indexOf(c))return"[cyclic]";seen.push(c)}return c})}
function apartContext(a,b,c){var d=require("vm");if(d)a=d.createContext({ctx:a}),c(d.runInContext(b,a));else if(document&&document.createElement){var e=document.createElement("iframe");e.style.display="none";document.body.appendChild(e);d="tmpCtx"+Math.random();window[d]=a;e.src="test-apart-ctx.html?"+d+"&"+encodeURIComponent(b);e.onload=function(){try{c(e.contentWindow.results)}catch(f){throw f;}}}else console.log("WARNING: cannot create an apart context.")}
exports["clone string"]=function(a){a.expect(2);var b="foo";a.strictEqual(clone(b),b);b="";a.strictEqual(clone(b),b);a.done()};exports["clone number"]=function(a){a.expect(5);var b=0;a.strictEqual(clone(b),b);b=1;a.strictEqual(clone(b),b);b=-1E3;a.strictEqual(clone(b),b);b=3.1415927;a.strictEqual(clone(b),b);b=-3.1415927;a.strictEqual(clone(b),b);a.done()};
exports["clone date"]=function(a){a.expect(3);var b=new Date,c=clone(b);a.ok(!!b.getUTCDate&&!!b.toUTCString);a.ok(!!c.getUTCDate&&!!c.toUTCString);a.equal(b.getTime(),c.getTime());a.done()};exports["clone object"]=function(a){a.expect(1);var b={foo:{bar:"baz"}},c=clone(b);a.deepEqual(c,b);a.done()};exports["clone array"]=function(a){a.expect(2);var b=[{foo:"bar"},"baz"],c=clone(b);a.ok(c instanceof Array);a.deepEqual(c,b);a.done()};
exports["clone buffer"]=function(a){if("undefined"==typeof Buffer)return a.done();a.expect(1);var b=new Buffer("this is a test buffer"),c=clone(b);a.deepEqual(c,b);a.done()};exports["clone regexp"]=function(a){a.expect(5);var b=/abc123/gi,c=clone(b);a.deepEqual(c,b);b=/a/g;a.ok(0===b.lastIndex);b.exec("123a456a");a.ok(4===b.lastIndex);b=clone(b);a.ok(b.global);a.ok(4===b.lastIndex);a.done()};
exports["clone object containing array"]=function(a){a.expect(1);var b={arr1:[{a:"1234",b:"2345"}],arr2:[{c:"345",d:"456"}]},c=clone(b);a.deepEqual(c,b);a.done()};
exports["clone object with circular reference"]=function(a){function b(a,b){return inspect(a)===inspect(b)}a.expect(8);var c=[1,"foo",{hello:"bar"},function(){},!1,[2]],d={b:[c,2,3,4],c:c};d.loop=d;d.loop2=d;c.loop=c;c.aloop=d;c=clone(d);a.ok(d!=c);a.ok(d.c!=c.c);a.ok(c.c==c.b[0]);a.ok(c.c.loop.loop.aloop==c);a.ok(c.c[0]==d.c[0]);a.ok(b(d,c));c.c[0]=2;a.ok(!b(d,c));c.c="2";a.ok(!b(d,c));a.done()};
exports["clone prototype"]=function(a){a.expect(3);var b={a:"aaa",x:123,y:45.65},c=clone.clonePrototype(b);a.strictEqual(c.a,b.a);a.strictEqual(c.x,b.x);a.strictEqual(c.y,b.y);a.done()};
exports["clone within an apart context"]=function(a){apartContext({clone:clone},"results = ctx.clone({ a: [1, 2, 3], d: new Date(), r: /^foo$/ig })",function(b){a.ok(b.a.constructor.toString()===Array.toString());a.ok(b.d.constructor.toString()===Date.toString());a.ok(b.r.constructor.toString()===RegExp.toString());a.done()})};exports["clone object with no constructor"]=function(a){a.expect(3);var b={foo:"bar",__proto__:null};a.ok("object"===typeof b);a.ok(!0);var c=clone(b);a.ok(b.foo,c.foo);a.done()};
exports["clone object with depth argument"]=function(a){a.expect(6);var b={foo:{bar:{baz:"qux"}}},c=clone(b,!1,1);a.deepEqual(c,b);a.notEqual(c,b);a.strictEqual(c.foo,b.foo);c=clone(b,!0,2);a.deepEqual(c,b);a.notEqual(c.foo,b.foo);a.strictEqual(c.foo.bar,b.foo.bar);a.done()};exports["maintain prototype chain in clones"]=function(a){a.expect(1);var b=new function(){},c=clone(b);a.strictEqual(Object.getPrototypeOf(b),Object.getPrototypeOf(c));a.done()};
exports["parent prototype is overriden with prototype provided"]=function(a){a.expect(1);var b=new function(){},b=clone(b,!0,Infinity,null);a.strictEqual(b.__defineSetter__,void 0);a.done()};exports["clone object with null children"]=function(a){a.expect(1);var b={foo:{bar:null,baz:{qux:!1}}},c=clone(b);a.deepEqual(c,b);a.done()};
exports["clone instance with getter"]=function(a){function b(){}a.expect(1);Object.defineProperty(b.prototype,"prop",{configurable:!0,enumerable:!0,get:function(){return"value"}});var c=new b,c=clone(c);a.strictEqual(c.prop,"value");a.done()};
exports["get RegExp flags"]=function(a){a.strictEqual(clone.__getRegExpFlags(/a/),"");a.strictEqual(clone.__getRegExpFlags(/a/i),"i");a.strictEqual(clone.__getRegExpFlags(/a/g),"g");a.strictEqual(clone.__getRegExpFlags(/a/gi),"gi");a.strictEqual(clone.__getRegExpFlags(/a/m),"m");a.done()};
exports["recognize Array object"]=function(a){apartContext(null,"results = [1, 2, 3]",function(b){var c=[4,5,6];a.ok(clone.__isArray(b));a.ok(clone.__isArray(c));a.ok(!clone.__isDate(b));a.ok(!clone.__isDate(c));a.ok(!clone.__isRegExp(b));a.ok(!clone.__isRegExp(c));a.done()})};
exports["recognize Date object"]=function(a){apartContext(null,"results = new Date()",function(b){var c=new Date;a.ok(clone.__isDate(b));a.ok(clone.__isDate(c));a.ok(!clone.__isArray(b));a.ok(!clone.__isArray(c));a.ok(!clone.__isRegExp(b));a.ok(!clone.__isRegExp(c));a.done()})};
exports["recognize RegExp object"]=function(a){apartContext(null,"results = /foo/",function(b){var c=/bar/;a.ok(clone.__isRegExp(b));a.ok(clone.__isRegExp(c));a.ok(!clone.__isArray(b));a.ok(!clone.__isArray(c));a.ok(!clone.__isDate(b));a.ok(!clone.__isDate(c));a.done()})};
