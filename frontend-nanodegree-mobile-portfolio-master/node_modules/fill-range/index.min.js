/*
 fill-range <https://github.com/jonschlinkert/fill-range>

 Copyright (c) 2014-2015, Jon Schlinkert.
 Licensed under the MIT License.
*/
var isObject=require("isobject"),isNumber=require("is-number"),randomize=require("randomatic"),repeatStr=require("repeat-string"),repeat=require("repeat-element");module.exports=fillRange;
function fillRange(a,c,b,d,h){if(null==a||null==c)throw Error("fill-range expects the first and second args to be strings.");"function"===typeof b&&(h=b,d={},b=null);"function"===typeof d&&(h=d,d={});isObject(b)&&(d=b,b="");var k,l=!1,g="";d=d||{};"undefined"===typeof d.silent&&(d.silent=!0);b=b||d.step;var m=a,r=c;c="-0"===c.toString()?0:c;if(d.optimize||d.makeRe)b=b?b+="~":b,l=k=!0,g="~";if("string"===typeof b){var e=stepRe().exec(b);if(e){var f=e.index,e=e[0];if("+"===e)return repeat(a,c);if("?"===
e)return[randomize(a,c)];">"===e?(b=b.substr(0,f)+b.substr(f+1),k=!0):"|"===e?(b=b.substr(0,f)+b.substr(f+1),l=k=!0,g=e):"~"===e&&(b=b.substr(0,f)+b.substr(f+1),l=k=!0,g=e)}else if(!isNumber(b)){if(!d.silent)throw new TypeError("fill-range: invalid step.");return null}}if(/[.&*()[\]^%$#@!]/.test(a)||/[.&*()[\]^%$#@!]/.test(c)){if(!d.silent)throw new RangeError("fill-range: invalid range arguments.");return null}if(!noAlphaNum(a)||!noAlphaNum(c)||hasBoth(a)||hasBoth(c)){if(!d.silent)throw new RangeError("fill-range: invalid range arguments.");
return null}f=isNumber(zeros(a));e=isNumber(zeros(c));if(!f&&e||f&&!e){if(!d.silent)throw new TypeError("fill-range: first range argument is incompatible with second.");return null}b=formatStep(b);f?(a=+a,c=+c):(a=a.charCodeAt(0),c=c.charCodeAt(0));e=a>c;if(0>a||0>c)l=k=!1;var p=isPadded(m,r),q,n=[],t=0;if(l&&shouldExpand(a,c,b,f,p,d)){if("|"===g||"~"===g)g=detectSeparator(a,c,b,f,e);return wrap([m,r],g,d)}for(;e?a>=c:a<=c;)p&&f&&(q=p(a)),m="function"===typeof h?h(a,f,q,t++):f?formatPadding(a,q):
l&&isInvalidChar(a)?null:String.fromCharCode(a),null!==m&&n.push(m),a=e?a-b:a+b;if((l||k)&&!d.noexpand){if("|"===g||"~"===g)g=detectSeparator(a,c,b,f,e);return 1===n.length||0>a||0>c?n:wrap(n,g,d)}return n}function wrap(a,c,b){"~"===c&&(c="-");a=a.join(c);b=b&&b.regexPrefix;"|"===c&&(a="("+(b?b+a:a)+")");"-"===c&&(a="["+(b&&"^"===b?b+a:a)+"]");return[a]}function isCharClass(a,c,b,d,h){return h?!1:d?9>=a&&9>=c:a<c?1===b:!1}function shouldExpand(a,c,b,d,h,k){return d&&(9<a||9<c)?!1:!h&&1===b&&a<c}
function detectSeparator(a,c,b,d,h){return isCharClass(a,c,b,d,h)?"~":"|"}function formatStep(a){return Math.abs(a>>0)||1}function formatPadding(a,c){var b=c?c+a:a;c&&"-"===a.toString().charAt(0)&&(b="-"+c+a.toString().substr(1));return b.toString()}function isInvalidChar(a){a=toStr(a);return"\\"===a||"["===a||"]"===a||"^"===a||"("===a||")"===a||"`"===a}function toStr(a){return String.fromCharCode(a)}function stepRe(){return/\?|>|\||\+|\~/g}function noAlphaNum(a){return/[a-z0-9]/i.test(a)}
function hasBoth(a){return/[a-z][0-9]|[0-9][a-z]/i.test(a)}function zeros(a){return/^-*0+$/.test(a.toString())?"0":a}function hasZeros(a){return/[^.]\.|^-*0+[0-9]/.test(a)}function isPadded(a,c){if(hasZeros(a)||hasZeros(c)){a=length(a);c=length(c);var b=a>=c?a:c;return function(a){return repeatStr("0",b-length(a))}}return!1}function length(a){return a.toString().length};
