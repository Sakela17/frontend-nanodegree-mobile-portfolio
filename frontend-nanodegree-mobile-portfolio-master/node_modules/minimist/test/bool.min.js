var parse=require("../"),test=require("tape");test("flag boolean default false",function(a){var b=parse(["moo"],{boolean:["t","verbose"],default:{verbose:!1,t:!1}});a.deepEqual(b,{verbose:!1,t:!1,_:["moo"]});a.deepEqual(typeof b.verbose,"boolean");a.deepEqual(typeof b.t,"boolean");a.end()});
test("boolean groups",function(a){var b=parse(["-x","-z","one","two","three"],{boolean:["x","y","z"]});a.deepEqual(b,{x:!0,y:!1,z:!0,_:["one","two","three"]});a.deepEqual(typeof b.x,"boolean");a.deepEqual(typeof b.y,"boolean");a.deepEqual(typeof b.z,"boolean");a.end()});
test("boolean and alias with chainable api",function(a){var b=parse(["-h","derp"],{boolean:"herp",alias:{h:"herp"}}),d=parse(["--herp","derp"],{boolean:"herp",alias:{h:"herp"}}),c={herp:!0,h:!0,_:["derp"]};a.same(b,c);a.same(d,c);a.end()});test("boolean and alias with options hash",function(a){var b={alias:{h:"herp"},boolean:"herp"},d=parse(["-h","derp"],b),b=parse(["--herp","derp"],b),c={herp:!0,h:!0,_:["derp"]};a.same(d,c);a.same(b,c);a.end()});
test("boolean and alias array with options hash",function(a){var b={alias:{h:["herp","harp"]},boolean:"h"},d=parse(["-h","derp"],b),c=parse(["--herp","derp"],b),b=parse(["--harp","derp"],b),e={harp:!0,herp:!0,h:!0,_:["derp"]};a.same(d,e);a.same(c,e);a.same(b,e);a.end()});test("boolean and alias using explicit true",function(a){var b={alias:{h:"herp"},boolean:"h"},d=parse(["-h","true"],b),b=parse(["--herp","true"],b),c={herp:!0,h:!0,_:[]};a.same(d,c);a.same(b,c);a.end()});
test("boolean and --x=true",function(a){var b=parse(["--boool","--other=true"],{boolean:"boool"});a.same(b.boool,!0);a.same(b.other,"true");b=parse(["--boool","--other=false"],{boolean:"boool"});a.same(b.boool,!0);a.same(b.other,"false");a.end()});test("boolean --boool=true",function(a){var b=parse(["--boool=true"],{default:{boool:!1},boolean:["boool"]});a.same(b.boool,!0);a.end()});
test("boolean --boool=false",function(a){var b=parse(["--boool=false"],{default:{boool:!0},boolean:["boool"]});a.same(b.boool,!1);a.end()});
