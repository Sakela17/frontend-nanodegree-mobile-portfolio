var parse=require("../"),test=require("tape");test("numeric short args",function(a){a.plan(2);a.deepEqual(parse(["-n123"]),{n:123,_:[]});a.deepEqual(parse(["-123","456"]),{1:!0,2:!0,3:456,_:[]})});
test("short",function(a){a.deepEqual(parse(["-b"]),{b:!0,_:[]},"short boolean");a.deepEqual(parse(["foo","bar","baz"]),{_:["foo","bar","baz"]},"bare");a.deepEqual(parse(["-cats"]),{c:!0,a:!0,t:!0,s:!0,_:[]},"group");a.deepEqual(parse(["-cats","meow"]),{c:!0,a:!0,t:!0,s:"meow",_:[]},"short group next");a.deepEqual(parse(["-h","localhost"]),{h:"localhost",_:[]},"short capture");a.deepEqual(parse(["-h","localhost","-p","555"]),{h:"localhost",p:555,_:[]},"short captures");a.end()});
test("mixed short bool and capture",function(a){a.same(parse(["-h","localhost","-fp","555","script.js"]),{f:!0,p:555,h:"localhost",_:["script.js"]});a.end()});test("short and long",function(a){a.deepEqual(parse(["-h","localhost","-fp","555","script.js"]),{f:!0,p:555,h:"localhost",_:["script.js"]});a.end()});
