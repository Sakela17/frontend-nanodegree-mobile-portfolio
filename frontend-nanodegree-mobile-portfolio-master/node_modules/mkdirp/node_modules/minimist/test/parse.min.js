var parse=require("../"),test=require("tape");test("parse args",function(a){a.deepEqual(parse(["--no-moo"]),{moo:!1,_:[]},"no");a.deepEqual(parse("-v a -v b -v c".split(" ")),{v:["a","b","c"],_:[]},"multi");a.end()});
test("comprehensive",function(a){a.deepEqual(parse("--name=meowmers bare -cats woo -h awesome --multi=quux --key value -b --bool --no-meep --multi=baz -- --not-a-flag eek".split(" ")),{c:!0,a:!0,t:!0,s:"woo",h:"awesome",b:!0,bool:!0,key:"value",multi:["quux","baz"],meep:!1,name:"meowmers",_:["bare","--not-a-flag","eek"]});a.end()});
test("nums",function(a){var b=parse("-x 1234 -y 5.67 -z 1e7 -w 10f --hex 0xdeadbeef 789".split(" "));a.deepEqual(b,{x:1234,y:5.67,z:1E7,w:"10f",hex:3735928559,_:[789]});a.deepEqual(typeof b.x,"number");a.deepEqual(typeof b.y,"number");a.deepEqual(typeof b.z,"number");a.deepEqual(typeof b.w,"string");a.deepEqual(typeof b.hex,"number");a.deepEqual(typeof b._[0],"number");a.end()});
test("flag boolean",function(a){var b=parse(["-t","moo"],{boolean:"t"});a.deepEqual(b,{t:!0,_:["moo"]});a.deepEqual(typeof b.t,"boolean");a.end()});test("flag boolean value",function(a){var b=parse(["--verbose","false","moo","-t","true"],{boolean:["t","verbose"],default:{verbose:!0}});a.deepEqual(b,{verbose:!1,t:!0,_:["moo"]});a.deepEqual(typeof b.verbose,"boolean");a.deepEqual(typeof b.t,"boolean");a.end()});
test("flag boolean default false",function(a){var b=parse(["moo"],{boolean:["t","verbose"],default:{verbose:!1,t:!1}});a.deepEqual(b,{verbose:!1,t:!1,_:["moo"]});a.deepEqual(typeof b.verbose,"boolean");a.deepEqual(typeof b.t,"boolean");a.end()});
test("boolean groups",function(a){var b=parse(["-x","-z","one","two","three"],{boolean:["x","y","z"]});a.deepEqual(b,{x:!0,y:!1,z:!0,_:["one","two","three"]});a.deepEqual(typeof b.x,"boolean");a.deepEqual(typeof b.y,"boolean");a.deepEqual(typeof b.z,"boolean");a.end()});test("newlines in params",function(a){var b=parse(["-s","X\nX"]);a.deepEqual(b,{_:[],s:"X\nX"});b=parse(["--s=X\nX"]);a.deepEqual(b,{_:[],s:"X\nX"});a.end()});
test("strings",function(a){var b=parse(["-s","0001234"],{string:"s"}).s;a.equal(b,"0001234");a.equal(typeof b,"string");b=parse(["-x","56"],{string:"x"}).x;a.equal(b,"56");a.equal(typeof b,"string");a.end()});test("stringArgs",function(a){var b=parse(["  ","  "],{string:"_"})._;a.same(b.length,2);a.same(typeof b[0],"string");a.same(b[0],"  ");a.same(typeof b[1],"string");a.same(b[1],"  ");a.end()});
test("empty strings",function(a){var b=parse(["-s"],{string:"s"}).s;a.equal(b,"");a.equal(typeof b,"string");b=parse(["--str"],{string:"str"}).str;a.equal(b,"");a.equal(typeof b,"string");b=parse(["-art"],{string:["a","t"]});a.equal(b.a,"");a.equal(b.r,!0);a.equal(b.t,"");a.end()});test("slashBreak",function(a){a.same(parse(["-I/foo/bar/baz"]),{I:"/foo/bar/baz",_:[]});a.same(parse(["-xyz/foo/bar/baz"]),{x:!0,y:!0,z:"/foo/bar/baz",_:[]});a.end()});
test("alias",function(a){var b=parse(["-f","11","--zoom","55"],{alias:{z:"zoom"}});a.equal(b.zoom,55);a.equal(b.z,b.zoom);a.equal(b.f,11);a.end()});test("multiAlias",function(a){var b=parse(["-f","11","--zoom","55"],{alias:{z:["zm","zoom"]}});a.equal(b.zoom,55);a.equal(b.z,b.zoom);a.equal(b.z,b.zm);a.equal(b.f,11);a.end()});
test("nested dotted objects",function(a){var b=parse("--foo.bar 3 --foo.baz 4 --foo.quux.quibble 5 --foo.quux.o_O --beep.boop".split(" "));a.same(b.foo,{bar:3,baz:4,quux:{quibble:5,o_O:!0}});a.same(b.beep,{boop:!0});a.end()});test("boolean and alias with chainable api",function(a){var b=parse(["-h","derp"],{boolean:"herp",alias:{h:"herp"}}),d=parse(["--herp","derp"],{boolean:"herp",alias:{h:"herp"}}),c={herp:!0,h:!0,_:["derp"]};a.same(b,c);a.same(d,c);a.end()});
test("boolean and alias with options hash",function(a){var b={alias:{h:"herp"},boolean:"herp"},d=parse(["-h","derp"],b),b=parse(["--herp","derp"],b),c={herp:!0,h:!0,_:["derp"]};a.same(d,c);a.same(b,c);a.end()});test("boolean and alias using explicit true",function(a){var b={alias:{h:"herp"},boolean:"h"},d=parse(["-h","true"],b),b=parse(["--herp","true"],b),c={herp:!0,h:!0,_:[]};a.same(d,c);a.same(b,c);a.end()});
test("boolean and --x=true",function(a){var b=parse(["--boool","--other=true"],{boolean:"boool"});a.same(b.boool,!0);a.same(b.other,"true");b=parse(["--boool","--other=false"],{boolean:"boool"});a.same(b.boool,!0);a.same(b.other,"false");a.end()});
