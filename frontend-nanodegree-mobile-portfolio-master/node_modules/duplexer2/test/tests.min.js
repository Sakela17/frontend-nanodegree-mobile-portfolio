var assert=require("chai").assert,stream=require("readable-stream"),duplexer2=require("../");
describe("duplexer2",function(){var a,c;beforeEach(function(){a=new stream.Writable({objectMode:!0});c=new stream.Readable({objectMode:!0});a._write=function(b,d,a){return a()};c._read=function(b){}});it("should interact with the writable stream properly for writing",function(b){var d=duplexer2(a,c);a._write=function(a,d,c){assert.strictEqual(a,"well hello there");return b()};d.write("well hello there")});it("should interact with the readable stream properly for reading",function(b){duplexer2(a,c).on("data",
function(a){assert.strictEqual(a,"well hello there");return b()});c.push("well hello there")});it("should end the writable stream, causing it to finish",function(b){var d=duplexer2(a,c);a.once("finish",b);d.end()});it("should finish when the writable stream finishes",function(b){duplexer2(a,c).once("finish",b);a.end()});it("should end when the readable stream ends",function(b){var d=duplexer2(a,c);d.resume();d.once("end",b);c.push(null)});it("should bubble errors from the writable stream when no behaviour is specified",
function(b){var d=duplexer2(a,c),e=Error("testing");d.on("error",function(a){assert.strictEqual(a,e);return b()});a.emit("error",e)});it("should bubble errors from the readable stream when no behaviour is specified",function(b){var d=duplexer2(a,c),e=Error("testing");d.on("error",function(a){assert.strictEqual(a,e);return b()});c.emit("error",e)});it("should bubble errors from the writable stream when bubbleErrors is true",function(b){var d=duplexer2({bubbleErrors:!0},a,c),e=Error("testing");d.on("error",
function(a){assert.strictEqual(a,e);return b()});a.emit("error",e)});it("should bubble errors from the readable stream when bubbleErrors is true",function(b){var d=duplexer2({bubbleErrors:!0},a,c),e=Error("testing");d.on("error",function(a){assert.strictEqual(a,e);return b()});c.emit("error",e)});it("should not bubble errors from the writable stream when bubbleErrors is false",function(b){var d=duplexer2({bubbleErrors:!1},a,c),e=setTimeout(b,25);d.on("error",function(a){clearTimeout(e);return b(Error("shouldn't bubble error"))});
a.on("error",function(){});a.emit("error",Error("testing"))});it("should not bubble errors from the readable stream when bubbleErrors is false",function(b){var d=duplexer2({bubbleErrors:!1},a,c),e=setTimeout(b,25);d.on("error",function(a){clearTimeout(e);return b(Error("shouldn't bubble error"))});c.on("error",function(){});c.emit("error",Error("testing"))})});
