var argv=process.argv.slice(2),versions=[],range=[],gt=[],lt=[],eq=[],inc=null,version=require("../package.json").version,loose=!1,identifier=void 0,semver=require("../semver"),reverse=!1;main();
function main(){if(!argv.length)return help();for(;argv.length;){var b=argv.shift();var a=b.indexOf("=");-1!==a&&(b=b.slice(0,a),argv.unshift(b.slice(a+1)));switch(b){case "-rv":case "-rev":case "--rev":case "--reverse":reverse=!0;break;case "-l":case "--loose":loose=!0;break;case "-v":case "--version":versions.push(argv.shift());break;case "-i":case "--inc":case "--increment":switch(argv[0]){case "major":case "minor":case "patch":case "prerelease":case "premajor":case "preminor":case "prepatch":inc=
argv.shift();break;default:inc="patch"}break;case "--preid":identifier=argv.shift();break;case "-r":case "--range":range.push(argv.shift());break;case "-h":case "--help":case "-?":return help();default:versions.push(b)}}versions=versions.filter(function(a){return semver.valid(a,loose)});if(!versions.length)return fail();if(inc&&(1!==versions.length||range.length))return failInc();a=0;for(b=range.length;a<b;a++)if(versions=versions.filter(function(b){return semver.satisfies(b,range[a],loose)}),!versions.length)return fail();
return success(versions)}function failInc(){console.error("--inc can only be used on a single version with no range");fail()}function fail(){process.exit(1)}function success(){var b=reverse?"rcompare":"compare";versions.sort(function(a,c){return semver[b](a,c,loose)}).map(function(a){return semver.clean(a,loose)}).map(function(a){return inc?semver.inc(a,inc,loose,identifier):a}).forEach(function(a,b,d){console.log(a)})}
function help(){console.log(["SemVer "+version,"\nA JavaScript implementation of the http://semver.org/ specification\nCopyright Isaac Z. Schlueter\n\nUsage: semver [options] <version> [<version> [...]]\nPrints valid versions sorted by SemVer precedence\n\nOptions:\n-r --range <range>\n        Print versions that match the specified range.\n\n-i --increment [<level>]\n        Increment a version by the specified level.  Level can\n        be one of: major, minor, patch, premajor, preminor,\n        prepatch, or prerelease.  Default level is 'patch'.\n        Only one version may be specified.\n\n--preid <identifier>\n        Identifier to be used to prefix premajor, preminor,\n        prepatch or prerelease version increments.\n\n-l --loose\n        Interpret versions and ranges loosely\n\nProgram exits successfully if any valid version satisfies\nall supplied ranges, and prints all satisfying versions.\n\nIf no satisfying versions are found, then exits failure.\n\nVersions are printed in ascending order, so supplying\nmultiple versions to the utility will just sort them."].join("\n"))};
