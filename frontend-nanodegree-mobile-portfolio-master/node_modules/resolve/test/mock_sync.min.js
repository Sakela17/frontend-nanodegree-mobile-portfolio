var path=require("path"),test=require("tape"),resolve=require("../");
test("mock",function(b){function a(a){return{basedir:path.resolve(a),isFile:function(a){return Object.prototype.hasOwnProperty.call(c,a)},readFileSync:function(a){return c[a]}}}b.plan(4);var c={};c[path.resolve("/foo/bar/baz.js")]="beep";b.equal(resolve.sync("./baz",a("/foo/bar")),path.resolve("/foo/bar/baz.js"));b.equal(resolve.sync("./baz.js",a("/foo/bar")),path.resolve("/foo/bar/baz.js"));b.throws(function(){resolve.sync("baz",a("/foo/bar"))});b.throws(function(){resolve.sync("../baz",a("/foo/bar"))})});
test("mock package",function(b){b.plan(1);var a={};a[path.resolve("/foo/node_modules/bar/baz.js")]="beep";a[path.resolve("/foo/node_modules/bar/package.json")]=JSON.stringify({main:"./baz.js"});b.equal(resolve.sync("bar",function(b){return{basedir:path.resolve(b),isFile:function(b){return Object.prototype.hasOwnProperty.call(a,b)},readFileSync:function(b){return a[b]}}}("/foo")),path.resolve("/foo/node_modules/bar/baz.js"))});
