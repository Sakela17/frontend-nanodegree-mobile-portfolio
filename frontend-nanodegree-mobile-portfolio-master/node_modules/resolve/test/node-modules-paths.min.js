var test=require("tape"),path=require("path"),parse=path.parse||require("path-parse"),keys=require("object-keys"),nodeModulesPaths=require("../lib/node-modules-paths"),verifyDirs=function(d,c,a,b,e){var l=[].concat(b||"node_modules");b={};for(var h={},k={},g=0;g<a.length;++g){var f=parse(a[g]);b[f.base]||(b[f.base]=0);b[f.base]+=1;k[f.dir]=!0;h[a[g]]=!0}d.equal(keys(k).length>=c.split(path.sep).length,!0,'there are >= dirs than "start" has');c=keys(b);d.deepEqual(c,l.concat(e||[]),"all desired module dirs were found");
d.equal(keys(h).length,a.length,"all dirs provided were unique");a={};for(e=0;e<c.length;++e)a[b[e]]=!0;d.equal(keys(a).length,1,"all found module directories had the same count")};
test("node-modules-paths",function(d){d.test("no options",function(c){var a=path.join(__dirname,"resolver"),b=nodeModulesPaths(a);verifyDirs(c,a,b);c.end()});d.test("empty options",function(c){var a=path.join(__dirname,"resolver"),b=nodeModulesPaths(a,{});verifyDirs(c,a,b);c.end()});d.test("with paths option",function(c){var a=path.join(__dirname,"resolver"),b=["a","b"],e=nodeModulesPaths(a,{paths:b});verifyDirs(c,a,e,null,b);c.end()});d.test("with moduleDirectory option",function(c){var a=path.join(__dirname,
"resolver"),b=nodeModulesPaths(a,{moduleDirectory:"not node modules"});verifyDirs(c,a,b,"not node modules");c.end()});d.test("with 1 moduleDirectory and paths options",function(c){var a=path.join(__dirname,"resolver"),b=["a","b"],e=nodeModulesPaths(a,{paths:b,moduleDirectory:"not node modules"});verifyDirs(c,a,e,"not node modules",b);c.end()});d.test("with 1+ moduleDirectory and paths options",function(c){var a=path.join(__dirname,"resolver"),b=["a","b"],e=["not node modules","other modules"],d=nodeModulesPaths(a,
{paths:b,moduleDirectory:e});verifyDirs(c,a,d,e,b);c.end()})});
