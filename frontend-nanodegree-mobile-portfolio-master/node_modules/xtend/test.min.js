var test=require("tape"),extend=require("./"),mutableExtend=require("./mutable");test("merge",function(a){a.deepEqual(extend({a:"foo"},{b:"bar"}),{a:"foo",b:"bar"});a.end()});test("replace",function(a){a.deepEqual(extend({a:"foo"},{a:"bar"}),{a:"bar"});a.end()});test("undefined",function(a){var b={a:void 0},c={b:"foo"};a.deepEqual(extend(b,c),{a:void 0,b:"foo"});a.deepEqual(extend(c,b),{a:void 0,b:"foo"});a.end()});
test("handle 0",function(a){var b={a:"default"},c={a:0};a.deepEqual(extend(b,c),{a:0});a.deepEqual(extend(c,b),{a:"default"});a.end()});test("is immutable",function(a){var b={};extend(b,{foo:"bar"});a.equal(b.foo,void 0);a.end()});test("null as argument",function(a){a.deepEqual(extend(null,{foo:"bar"},void 0),{foo:"bar"});a.end()});test("mutable",function(a){var b={foo:"bar"};mutableExtend(b,{bar:"baz"});a.equal(b.bar,"baz");a.end()});
test("null prototype",function(a){var b=Object.create(null);b.b="bar";a.deepEqual(extend({a:"foo"},b),{a:"foo",b:"bar"});a.end()});test("null prototype mutable",function(a){var b={foo:"bar"},c=Object.create(null);c.bar="baz";mutableExtend(b,c);a.equal(b.bar,"baz");a.end()});
